执行：
1.执行testcases目录下的run.sh文件
2.执行完测试用例后使用 allure serve ../result 查看测试报告

框架说明：
1.代码在page/base_page.py中封装使用方法，避免对driver的直接操作
2.代码在page/app.py中存放app的初始化数据
3.datas中存放testcases所需的测试数据
4.steps中存放具体每个方法的测试步骤
5.testcases/conftest在test_runall.py启动时默认运行，conftest中启用视频录制
6.执行完run.sh后，result中生成视频，捕获异常图片，测试结果

框架优点：
1.业务层与实现层分离，方便代码维护
2.测试步骤驱动，使得测试步骤修改只需修改yaml文件，而不需修改底层代码
3.测试数据驱动，使得只需写一条testcase即可跑多条相似用例
4.图片截取，当找不到元素时，截取图片并存放入allure测试报告
5.视频录制，测试过程全程录制视频
6.黑名单处理机制，用于处理app内出现随机弹框问题

增加测试用例：
在test_runall中添加，因为代码使用pytest测试框架，所以添加时需注意方法以test_开头

增加测试page及步骤：
在page中加入py文件及方法，并在steps中增加yaml文件，在yaml文件中编写测试步骤

增加测试数据：
在datas中增加yaml文件，在yaml文件中编写测试数据，并在test_runall中调用